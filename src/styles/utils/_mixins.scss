// 混入函数定义
@use 'sass:map';
@use '../base/variables' as *;

// 响应式断点混入
@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// 最大宽度响应式混入
@mixin respond-to-max($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: map.get($breakpoints, $breakpoint) - 1px) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// 移动端响应式混入（简化版本）
@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

// 平板响应式混入（简化版本）
@mixin tablet {
  @media (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}

// 桌面端响应式混入（简化版本）
@mixin desktop {
  @media (min-width: 1025px) {
    @content;
  }
}

// Flexbox 居中混入
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Flexbox 垂直居中混入
@mixin flex-center-vertical {
  display: flex;
  align-items: center;
}

// Flexbox 水平居中混入
@mixin flex-center-horizontal {
  display: flex;
  justify-content: center;
}

// 绝对定位居中混入
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 文本省略号混入
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本省略号混入
@mixin text-ellipsis-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 清除浮动混入
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// 按钮重置混入
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

// 输入框重置混入
@mixin input-reset {
  background: none;
  border: none;
  outline: none;
  font: inherit;
  color: inherit;
}

// 卡片阴影混入
@mixin card-shadow($level: 'md') {
  @if $level == 'sm' {
    box-shadow: $shadow-sm;
  } @else if $level == 'md' {
    box-shadow: $shadow-md;
  } @else if $level == 'lg' {
    box-shadow: $shadow-lg;
  } @else if $level == 'xl' {
    box-shadow: $shadow-xl;
  }
}

// 过渡动画混入
@mixin transition($properties: all, $duration: $transition-duration-base, $timing-function: $transition-timing-function) {
  transition: $properties $duration $timing-function;
}

// 悬停效果混入
@mixin hover-lift {
  transition: transform $transition-duration-fast $transition-timing-function;
  
  &:hover {
    transform: translateY(-2px);
  }
}

// 焦点样式混入
@mixin focus-ring($color: $primary-color) {
  outline: 2px solid transparent;
  outline-offset: 2px;
  
  &:focus {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// 隐藏滚动条混入
@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  
  &::-webkit-scrollbar {
    display: none;
  }
}

// 网格布局混入
@mixin grid($columns: 1, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// 容器最大宽度混入
@mixin container($max-width: 1200px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-lg;
  
  @include tablet {
    padding: 0 $spacing-xl;
  }
  
  @include mobile {
    padding: 0 $spacing-md;
  }
}